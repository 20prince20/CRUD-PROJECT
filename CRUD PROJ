from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from typing import List

app = FastAPI()

# Sample data (in-memory storage)
contacts = []

class Contact(BaseModel):
    id: int
    name: str
    email: str
    phone: str

@app.post("/contacts/", response_model=Contact)
def create_contact(contact: Contact):
    contact.id = len(contacts)
    contacts.append(contact)
    return contact

@app.get("/contacts/", response_model=List[Contact])
def read_contacts():
    return contacts

@app.get("/contacts/{contact_id}", response_model=Contact)
def read_contact(contact_id: int):
    if 0 <= contact_id < len(contacts):
        return contacts[contact_id]
    raise HTTPException(status_code=404, detail="Contact not found")

@app.put("/contacts/{contact_id}", response_model=Contact)
def update_contact(contact_id: int, updated_contact: Contact):
    if 0 <= contact_id < len(contacts):
        updated_contact.id = contact_id
        contacts[contact_id] = updated_contact
        return updated_contact
    raise HTTPException(status_code=404, detail="Contact not found")

@app.delete("/contacts/{contact_id}", response_model=Contact)
def delete_contact(contact_id: int):
    if 0 <= contact_id < len(contacts):
        deleted_contact = contacts.pop(contact_id)
        return deleted_contact
    raise HTTPException(status_code=404, detail="Contact not found")

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="127.0.0.1", port=8000)
